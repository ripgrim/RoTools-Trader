"use server"
export async function getBatchThumbnails(
  assets: {
    type:
      | "Avatar"
      | "AvatarHeadShot"
      | "GameIcon"
      | "BadgeIcon"
      | "GameThumbnail"
      | "GamePass"
      | "Asset"
      | "BundleThumbnail"
      | "Outfit"
      | "GroupIcon"
      | "DeveloperProduct"
      | "AutoGeneratedAsset"
      | "AvatarBust"
      | "PlaceIcon"
      | "AutoGeneratedGameIcon"
      | "ForceAutoGeneratedIcon"
      | "Look"
      | "CreatorContextAsset"
      | "Screenshot";
    size: string,
    format: "png" | "jpeg" | "webp",
    id: string | number,
  }[],
) {
  const response = await fetch(`https://thumbnails.roblox.com/v1/batch`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
    },
    body: JSON.stringify(assets.map((data) => ({
        requestId: String(data.id),
        targetId: typeof data.id === "number" ? data.id : parseInt(data.id),
        type: data.type,
        size: data.size,
        format: data.format,
        isCircular: false,
      
    }))),
  });
  
  if (!response.ok) {
    throw new Error(
      `failed to get thumbnails (${response.status}): ${await response.text()}`
    );
  }

  const data = (await response.json())
return (data.data as { targetId: number; imageUrl: string }[]).reduce<Record<string, string>>((acc, item) => {
    acc[String(item.targetId)] = item.imageUrl;
    return acc;
}, {});
}
