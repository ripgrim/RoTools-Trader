"use client"

import { Trade, TradeItem } from '@/app/types/trade';
import { RobuxIcon } from '@/components/ui/robux-icon';
import { LimitedIcon } from '@/components/ui/limited-icon';
import Image from 'next/image';
import { format } from 'date-fns';

interface TradeScreenshotProps {
  trade: Trade;
}

function ItemList({ items, type }: { items: TradeItem[]; type: 'offering' | 'requesting' }) {
  return (
    <div className="space-y-2">
      {items.map((item) => (
        <div key={item.id} className="flex items-center gap-2 bg-zinc-900/50 p-2 border border-zinc-800">
          <img
            src={item.thumbnail}
            alt={item.name}
            className="w-8 h-8 object-cover border border-zinc-800"
          />
          <div className="flex-1 min-w-0">
            <div className="flex items-center gap-1">
              <span className="text-sm text-zinc-100 truncate">{item.name}</span>
              {item.serial && (
                <div className="flex items-center gap-0.5 px-1 rounded bg-zinc-800 text-zinc-400">
                  <LimitedIcon className="w-3 h-3" />
                  <span className="text-xs">{item.serial}</span>
                </div>
              )}
            </div>
            <div className="flex items-center gap-2 text-xs">
              <div className="flex items-center gap-1">
                <RobuxIcon className="w-3 h-3" />
                <span>{item.rap?.toLocaleString()}</span>
              </div>
              <div className="flex items-center gap-1">
                <Image
                  src="/icons/rolimons_logo_icon_blue.png"
                  alt="Value"
                  width={12}
                  height={12}
                  className="object-contain"
                />
                <span>{item.value?.toLocaleString()}</span>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}

export function TradeScreenshot({ trade }: TradeScreenshotProps) {
  const offeringTotal = trade.items.offering.reduce((sum, item) => sum + (typeof item.value === 'number' ? item.value : 0), 0);
  const requestingTotal = trade.items.requesting.reduce((sum, item) => sum + (typeof item.value === 'number' ? item.value : 0), 0);
  const difference = offeringTotal - requestingTotal;
  const percentage = requestingTotal === 0 ? 0 : (difference / requestingTotal) * 100;

  return (
    <div className="bg-zinc-900 p-4 space-y-4 max-w-md mx-auto">
      {/* Header */}
      <div className="flex items-center justify-between border-b border-zinc-800 pb-3">
        <div className="flex items-center gap-2">
          <img
            src={trade.user.avatar}
            alt={trade.user.displayName}
            className="w-8 h-8 border border-zinc-800"
          />
          <div>
            <div className="text-sm font-medium text-zinc-100">{trade.user.displayName}</div>
            <div className="text-xs text-zinc-400">@{trade.user.name}</div>
          </div>
        </div>
        <div className="text-xs text-zinc-400">
          {format(new Date(trade.created), 'MMM d, yyyy')}
        </div>
      </div>

      {/* Trade Content */}
      <div className="grid grid-cols-2 gap-4">
        <div>
          <div className="text-xs font-medium text-zinc-400 mb-2">Receiving</div>
          <ItemList items={trade.items.offering} type="offering" />
          <div className="mt-2 text-xs text-zinc-400">
            Total Value: <span className="text-zinc-100">{offeringTotal.toLocaleString()}</span>
          </div>
        </div>
        <div>
          <div className="text-xs font-medium text-zinc-400 mb-2">Giving</div>
          <ItemList items={trade.items.requesting} type="requesting" />
          <div className="mt-2 text-xs text-zinc-400">
            Total Value: <span className="text-zinc-100">{requestingTotal.toLocaleString()}</span>
          </div>
        </div>
      </div>

      {/* Summary */}
      <div className="border-t border-zinc-800 pt-3">
        <div className="flex items-center justify-between">
          <span className="text-sm text-zinc-400">Value Difference:</span>
          <div className="flex items-center gap-1">
            <Image
              src="/icons/rolimons_logo_icon_blue.png"
              alt="Value"
              width={14}
              height={14}
              className="object-contain"
            />
            <span className={`text-sm font-medium ${difference > 0 ? 'text-green-500' : difference < 0 ? 'text-red-500' : 'text-zinc-100'}`}>
              {difference > 0 ? '+' : ''}{difference.toLocaleString()} ({percentage > 0 ? '+' : ''}{percentage.toFixed(0)}%)
            </span>
          </div>
        </div>
      </div>

      {/* Watermark */}
      <div className="text-center text-xs text-zinc-500 pt-2">
        Generated by RoTools Trader
      </div>
    </div>
  );
} 